#!/bin/bash -eu

# I would like to back my photo archive up to Google photos. Sadly, one
# cannot specify a tree to upload; one can only specify a set of photos
# from a single diirectory.
#
# Use xattrs to mark which photos have been uploaded. For any photo that
# has not been uploaded yet, copy it to a staging directory. I can then
# manually upload all files from that staging directory.

function usage() {
	echo "$@"
	echo
	echo "Usage: $( basename $0 ) dirName [[dirrname2] ... ]"
	echo
	echo "Where 'dirName' is the dir pattern to pass to"
	echo "find for finding files."
	exit 1
}

[ $# -ge 1 ] || usage 'Wrong number of parameters'

while [ $# -ge 1 ] ; do

ROOT_DIR="$1"
echo "Scanning ${ROOT_DIR}"

staging=/Volumes/Apricorn/staging.$(date "+%Y%m%dT%H%M%S")/
mkdir -p ${staging}
echo "Staging files to ${staging}"

MAX_FILES=200

# Google Photos does not accept .RW2 files. Do not try to upload those.
EXTENSIONS="png|gif|bmp|jpg|jpeg|NEF"

SKIP_LIST=""

COUNT=0
for f in $( find "${ROOT_DIR}" -type f | egrep -i "[.](${EXTENSIONS})$" ) ; do
	TARGET=$( basename ${f} )

	# Do we already have a file with this name in staging?
	if [ -f ${staging}/${TARGET} ] ; then
		# echo "Skipping duplicate file ${TARGET} ..."
		continue
	fi

	# Is this file blacklisted?
	SKIP_IT=0
	for skip in ${SKIP_LIST} ; do
		if [[ "${TARGET}" == "${skip}" ]] ; then
			SKIP_IT=1
			break
		fi
	done
	if [[ ${SKIP_IT} -eq 1 ]] ; then
		echo "Skipping blackisted file ${TARGET} ..."
		continue
	fi

	# Have we already uploaded this file?
	ATTR=$( xattr -p com.erikbryant.uploaded ${f} || true )
	if [[ "${ATTR}" == "1" ]] ; then
		# echo "Skipping uploaded file ${TARGET} ..."
		continue
	fi

	# We like this file! Put it in staging. Make it a hardlink
	# so that when we later mark it with an xattr the original
	# file will also get the xattr. xattr does not pass through
	# soft links.
	ln ${f} ${staging}/${TARGET}

	COUNT=$(( ${COUNT} + 1 ))
	if [[ ${COUNT} -ge ${MAX_FILES} ]] ; then
		# Roll to the next staging directory and reset the count.
		COUNT=0
		staging=/Volumes/Apricorn/staging.$(date "+%Y%m%dT%H%M%S")/
		mkdir -p ${staging}
		echo "Rolled to ${staging} ..."
		# echo "Found enough files (${COUNT}) ..."
		# break
	fi
done

shift

done
